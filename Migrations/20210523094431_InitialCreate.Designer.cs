// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Musicpolitan.Database;

namespace Musicpolitan.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210523094431_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Musicpolitan.Models.Albums", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("artistsid")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("artistsid");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Musicpolitan.Models.Articles", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("banner_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("usersid")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("usersid");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Musicpolitan.Models.Artists", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Musicpolitan.Models.Comment", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long?>("authorid")
                        .HasColumnType("bigint");

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("newsid")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("authorid");

                    b.HasIndex("newsid");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Musicpolitan.Models.Genre", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Musicpolitan.Models.News", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("banner_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Musicpolitan.Models.Releases", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("artistid")
                        .HasColumnType("bigint");

                    b.Property<string>("banner_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("artistid");

                    b.ToTable("Releases");
                });

            modelBuilder.Entity("Musicpolitan.Models.Reviews", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("banner_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("genreid")
                        .HasColumnType("bigint");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("mark")
                        .HasColumnType("float");

                    b.Property<string>("shortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("usersid")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("genreid");

                    b.HasIndex("usersid");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Musicpolitan.Models.Songs", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Albumsid")
                        .HasColumnType("bigint");

                    b.Property<long?>("artistid")
                        .HasColumnType("bigint");

                    b.Property<double>("duration")
                        .HasColumnType("float");

                    b.Property<long?>("genreid")
                        .HasColumnType("bigint");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Albumsid");

                    b.HasIndex("artistid");

                    b.HasIndex("genreid");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("Musicpolitan.Models.Users", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Musicpolitan.Models.Albums", b =>
                {
                    b.HasOne("Musicpolitan.Models.Artists", "artists")
                        .WithMany()
                        .HasForeignKey("artistsid");

                    b.Navigation("artists");
                });

            modelBuilder.Entity("Musicpolitan.Models.Articles", b =>
                {
                    b.HasOne("Musicpolitan.Models.Users", "users")
                        .WithMany()
                        .HasForeignKey("usersid");

                    b.Navigation("users");
                });

            modelBuilder.Entity("Musicpolitan.Models.Comment", b =>
                {
                    b.HasOne("Musicpolitan.Models.Users", "author")
                        .WithMany()
                        .HasForeignKey("authorid");

                    b.HasOne("Musicpolitan.Models.News", "news")
                        .WithMany()
                        .HasForeignKey("newsid");

                    b.Navigation("author");

                    b.Navigation("news");
                });

            modelBuilder.Entity("Musicpolitan.Models.Releases", b =>
                {
                    b.HasOne("Musicpolitan.Models.Artists", "artist")
                        .WithMany()
                        .HasForeignKey("artistid");

                    b.Navigation("artist");
                });

            modelBuilder.Entity("Musicpolitan.Models.Reviews", b =>
                {
                    b.HasOne("Musicpolitan.Models.Genre", "genre")
                        .WithMany()
                        .HasForeignKey("genreid");

                    b.HasOne("Musicpolitan.Models.Users", "users")
                        .WithMany()
                        .HasForeignKey("usersid");

                    b.Navigation("genre");

                    b.Navigation("users");
                });

            modelBuilder.Entity("Musicpolitan.Models.Songs", b =>
                {
                    b.HasOne("Musicpolitan.Models.Albums", null)
                        .WithMany("songs")
                        .HasForeignKey("Albumsid");

                    b.HasOne("Musicpolitan.Models.Artists", "artist")
                        .WithMany()
                        .HasForeignKey("artistid");

                    b.HasOne("Musicpolitan.Models.Genre", "genre")
                        .WithMany()
                        .HasForeignKey("genreid");

                    b.Navigation("artist");

                    b.Navigation("genre");
                });

            modelBuilder.Entity("Musicpolitan.Models.Albums", b =>
                {
                    b.Navigation("songs");
                });
#pragma warning restore 612, 618
        }
    }
}
